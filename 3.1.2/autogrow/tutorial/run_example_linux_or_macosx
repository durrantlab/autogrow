# AutoGrow 3.1 includes a subdirectory called tutorial with files that show how to
# use the software.
# 
# Step 1: Begin by changing to the tutorial directory:
# 
# cd /PATH/TO/AUTOGROW3/tutorial/
# 
# Step 2: AutoGrow 3.1 can be run from this directory thusly:
# 
# python ../autogrow_3_1_2.py
# 
# Step 3: Specify a PDB model of the target protein receptor. In this tutorial, a
# model of TbREL1 (PDB ID: 1XDN), a potential African-sleep-sickness drug target,
# will be used. The center of the TbREL1 active site is roughly located at (39.5,
# 23.7, 15.0). A box 30.0 x 30.0 x 20.0 centered on that point should encompass
# the entire site. These are the AutoGrow 3.1 parameters required:
# 
# -filename_of_receptor 1xdn_receptor.pdb -center_x 39.5 -center_y 23.7 -center_z
# 15.0 -size_x 30.0 -size_y 30.0 -size_z 20.0
# 
# Step 4: Specify which click-chemisty reactions to use in ligand building. In
# this example, we'll use the azide-alkyne Huisgen cycloaddition. Though it's a
# bit redundant here, we'll also tell AutoGrow 3.1 to avoid click-chemistry
# reactions that merely swap compound moieties (e.g., Br => azide), favoring
# instead joining reactions that actually add new fragments.
# 
# -additional_autoclickchem_parameters "-all_reactions +azide_and_alkyne_to_azole"
# -allow_modification_without_frag_addition FALSE
# 
# Step 5: Specify the source compounds that will be optimized into predicted
# ligands. The tutorial directory contains a subdirectory called
# starting_compounds with 117 naphthalene PDB files chosen because a number of
# experimentally validated TbREL1 inhibitors contain naphthalene substructures.
# Additionally, these naphthalene models contain azide and/or alkyne groups, so
# they can participate in the azide-alkyne Huisgen cycloaddition. The fragments
# that will be added to these naphthalene building blocks via this cycloaddition
# reaction will be drawn from one of the AutoGrow 3.1 default fragment libraries.
# 
# -directory_of_source_compounds ./starting_compounds/ -directory_of_fragments
# ../fragments/MW_250/
# 
# Step 6: A number of parameters must also be included to control the behavior of
# the genetic algorithm. Note that the first generation is special in that it can
# have a different number of mutants and crossovers than subsequent generations.
# 
# -number_of_mutants_first_generation 10 -number_of_crossovers_first_generation 10
# -number_of_mutants 10 -number_of_crossovers 10
# -top_ones_to_advance_to_next_generation 5 -num_generations 2
# -max_seconds_per_generation 1000000
# 
# Step 7: Aside from judging ligand fitness by the docking score, AutoGrow 3.1 can
# be instructed to selectively advance only drug-like compounds to subsequent
# generations. In the current example, we're going to require that ligands satisfy
# Lipinski's Rule of Fives as well as the drug-like criteria described by Ghose et
# al. We're also going to evaluate compound fitness using the AutoDock Vina
# scoring function. The actual docking score will be used, rather than ligand
# efficiency (score / number of heavy atoms).
# 
# -use_lipinski_filter TRUE -use_strict_lipinski_filter TRUE -use_ghose_filter
# TRUE -scoring_function VINA -score_by_ligand_efficiency FALSE
# 
# Step 8: AutoGrow 3.1 can be instructed to favor compounds that contain certain
# key moieties. In the current example, however, we do not need this
# functionality.
# 
# -maintain_core FALSE -minimum_core_atoms_required 0
# 
# Step 9: AutoGrow 3.1 requires a number of additional open-source programs. The
# locations of these programs and/or their directories must also be specified.
# Take care to specify the correct paths here. -vina_executable should point to
# the actual vina executable, not a directory. In contrast,
# -openbabel_bin_directory points to a directory that contains the executable
# files babel and obprop, and -mgltools_directory points to a directory that
# contains subdirectories with names like bin and MGLToolsPckgs.
# 
# -vina_executable /PATH/TO/VINA/EXECUTABLE/vina -openbabel_bin_directory
# /PATH/TO/OPENBABEL/BIN/DIR/bin/ -mgltools_directory
# /PATH/TO/MGLTOOLS/DIRECTORY/MGLTools-1.5.4/
# 
# Step 10: AutoGrow 3.1 runs much faster on multiple processors.
# 
# -num_processors 4
# 
# Step 11: Finally, the user must specify the directory where the AutoGrow 3.1
# output will be written.
# 
# -output_dir ./autogrow_output/
# 
# So, putting all this together, we have the following command line:

# python ../autogrow_3_1_2.py -filename_of_receptor 1xdn_receptor.pdb -center_x 39.5 -center_y 23.7 -center_z 15.0 -size_x 30.0 -size_y 30.0 -size_z 20.0 -additional_autoclickchem_parameters "-all_reactions +azide_and_alkyne_to_azole" -allow_modification_without_frag_addition FALSE -directory_of_source_compounds ./starting_compounds/ -directory_of_fragments ../fragments/MW_250/ -number_of_mutants_first_generation 10 -number_of_crossovers_first_generation 10 -number_of_mutants 10 -number_of_crossovers 10 -top_ones_to_advance_to_next_generation 5 -num_generations 2 -max_seconds_per_generation 1000000 -use_lipinski_filter TRUE -use_strict_lipinski_filter TRUE -use_ghose_filter TRUE -scoring_function VINA -score_by_ligand_efficiency FALSE -maintain_core FALSE -minimum_core_atoms_required 0 -vina_executable /PATH/TO/VINA/EXECUTABLE/vina -openbabel_bin_directory /PATH/TO/OPENBABEL/BIN/DIR/bin/ -mgltools_directory /PATH/TO/MGLTOOLS/DIRECTORY/MGLTools-1.5.4/ -num_processors 4 -output_dir ./autogrow_output/

# Some users may find it convenient to break this command into multiple lines
# and to store it in an executable file for subsequent reference.

python ../autogrow_3_1_2.py \
     -filename_of_receptor 1xdn_receptor.pdb \
     -center_x 39.5 -center_y 23.7 -center_z 15.0 \
     -size_x 30.0 -size_y 30.0 -size_z 20.0 \
     -additional_autoclickchem_parameters "-all_reactions +azide_and_alkyne_to_azole" \
     -allow_modification_without_frag_addition FALSE \
     -directory_of_source_compounds ./starting_compounds/ \
     -directory_of_fragments ../fragments/MW_250/ \
     -number_of_mutants_first_generation 10 -number_of_crossovers_first_generation 10 \
     -number_of_mutants 10 -number_of_crossovers 10 \
     -top_ones_to_advance_to_next_generation 5 -num_generations 2 \
     -max_seconds_per_generation 1000000 \
     -use_lipinski_filter TRUE -use_strict_lipinski_filter TRUE -use_ghose_filter TRUE \
     -scoring_function VINA -score_by_ligand_efficiency FALSE \
     -maintain_core FALSE -minimum_core_atoms_required 0 \
     -vina_executable /PATH/TO/VINA/EXECUTABLE/vina \
     -openbabel_bin_directory /PATH/TO/OPENBABEL/BIN/DIR/bin/ \
     -mgltools_directory /PATH/TO/MGLTOOLS/DIRECTORY/MGLTools-1.5.4/ \
     -num_processors 4 \
     -output_dir ./autogrow_output/

